Parsing file: 'AST_defer.sc'...
Parsing done, characters count 3728

Generating C file: '/tmp/AST_defer.c'

Modified AST:

[0] TranslationUnit
	[1] Function (DIRTY: modified)  (void DEFER_FUNCTION_SCOPE ( )) { 0 -- 163 }
		[2] PostfixExpression '(...)' { 64 -- 87 }
			[3] Identifier 'printf' { 0 -- 0 }
				[4] Constant '"function scope 1\n"' { 0 -- 0 }
		[2] Defer (DIRTY: removed)  { 87 -- 127 }
			[3] PostfixExpression (DIRTY: removed)  '(...)' { 97 -- 126 }
				[4] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
					[5] Constant (DIRTY: removed)  '"function scope 3\n"' { 0 -- 0 }
		[2] PostfixExpression '(...)' { 127 -- 161 }
			[3] Identifier 'printf' { 0 -- 0 }
				[4] Constant '"function scope 2\n"' { 0 -- 0 }
		[2] PostfixExpression (DIRTY: added)  '(...)' { 97 -- 126 }
			[3] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
				[4] Constant (DIRTY: removed)  '"function scope 3\n"' { 0 -- 0 }
	[1] Function (void DEFER_SIMPLE_SCOPE_ONLY ( )) { 163 -- 308 }
		[2] Scope (DIRTY: modified)  { 207 -- 306 }
			[3] PostfixExpression '(...)' { 222 -- 236 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"scope 1\n"' { 0 -- 0 }
			[3] Defer (DIRTY: removed)  { 236 -- 271 }
				[4] PostfixExpression (DIRTY: removed)  '(...)' { 250 -- 270 }
					[5] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
						[6] Constant (DIRTY: removed)  '"scope 3\n"' { 0 -- 0 }
			[3] PostfixExpression '(...)' { 271 -- 300 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"scope 2\n"' { 0 -- 0 }
			[3] PostfixExpression (DIRTY: added)  '(...)' { 250 -- 270 }
				[4] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
					[5] Constant (DIRTY: removed)  '"scope 3\n"' { 0 -- 0 }
	[1] Function (void DEFER_SIMPLE_SCOPE ( )) { 308 -- 524 }
		[2] PostfixExpression '(...)' { 352 -- 379 }
			[3] Identifier 'printf' { 0 -- 0 }
				[4] Constant '"function scope start\n"' { 0 -- 0 }
		[2] Scope (DIRTY: modified)  { 379 -- 485 }
			[3] PostfixExpression '(...)' { 401 -- 415 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"scope 1\n"' { 0 -- 0 }
			[3] Defer (DIRTY: removed)  { 415 -- 450 }
				[4] PostfixExpression (DIRTY: removed)  '(...)' { 429 -- 449 }
					[5] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
						[6] Constant (DIRTY: removed)  '"scope 3\n"' { 0 -- 0 }
			[3] PostfixExpression '(...)' { 450 -- 479 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"scope 2\n"' { 0 -- 0 }
			[3] PostfixExpression (DIRTY: added)  '(...)' { 429 -- 449 }
				[4] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
					[5] Constant (DIRTY: removed)  '"scope 3\n"' { 0 -- 0 }
		[2] PostfixExpression '(...)' { 485 -- 522 }
			[3] Identifier 'printf' { 0 -- 0 }
				[4] Constant '"function scope end\n"' { 0 -- 0 }
	[1] Function (void DEFER_CONDITION (int someParam,  )) { 524 -- 730 }
		[2] PostfixExpression '(...)' { 574 -- 590 }
			[3] Identifier 'printf' { 0 -- 0 }
				[4] Constant '"fun start\n"' { 0 -- 0 }
		[2] If (DIRTY: modified)  { 590 -- 702 }
			[3] Group { 590 -- 615 }
				[4] BinaryOp '==' { 598 -- 615 }
					[5] Identifier 'someParam' { 0 -- 0 }
					[5] Constant '5' { 0 -- 0 }
			[3] PostfixExpression '(...)' { 636 -- 644 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"1\n"' { 0 -- 0 }
			[3] Defer (DIRTY: removed)  { 644 -- 673 }
				[4] PostfixExpression (DIRTY: removed)  '(...)' { 658 -- 672 }
					[5] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
						[6] Constant (DIRTY: removed)  '"3\n"' { 0 -- 0 }
			[3] PostfixExpression '(...)' { 673 -- 696 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"2\n"' { 0 -- 0 }
			[3] PostfixExpression (DIRTY: added)  '(...)' { 658 -- 672 }
				[4] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
					[5] Constant (DIRTY: removed)  '"3\n"' { 0 -- 0 }
		[2] PostfixExpression '(...)' { 702 -- 728 }
			[3] Identifier 'printf' { 0 -- 0 }
				[4] Constant '"fun end\n"' { 0 -- 0 }
	[1] Function (DIRTY: modified)  (void DEFER_CONDITION_MULTIPLE_NESTED (int someParam,  )) { 730 -- 986 }
		[2] Defer (DIRTY: removed)  { 795 -- 811 }
			[3] PostfixExpression (DIRTY: removed)  '(...)' { 795 -- 810 }
				[4] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
					[5] Constant (DIRTY: removed)  '"last"' { 0 -- 0 }
		[2] If (DIRTY: modified)  { 811 -- 984 }
			[3] Group { 811 -- 836 }
				[4] BinaryOp '>' { 819 -- 836 }
					[5] Identifier 'someParam' { 0 -- 0 }
					[5] Constant '10' { 0 -- 0 }
			[3] Defer (DIRTY: removed)  { 856 -- 871 }
				[4] PostfixExpression (DIRTY: removed)  '(...)' { 856 -- 870 }
					[5] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
						[6] Constant (DIRTY: removed)  '"2\n"' { 0 -- 0 }
			[3] If (DIRTY: modified)  { 871 -- 978 }
				[4] Group { 871 -- 898 }
					[5] BinaryOp '<' { 882 -- 898 }
						[6] Identifier 'someParam' { 0 -- 0 }
						[6] Constant '5' { 0 -- 0 }
				[4] Defer (DIRTY: removed)  { 926 -- 941 }
					[5] PostfixExpression (DIRTY: removed)  '(...)' { 926 -- 940 }
						[6] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
							[7] Constant (DIRTY: removed)  '"2\n"' { 0 -- 0 }
				[4] PostfixExpression '(...)' { 941 -- 968 }
					[5] Identifier 'printf' { 0 -- 0 }
						[6] Constant '"1\n"' { 0 -- 0 }
				[4] PostfixExpression (DIRTY: added)  '(...)' { 926 -- 940 }
					[5] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
						[6] Constant (DIRTY: removed)  '"2\n"' { 0 -- 0 }
			[3] PostfixExpression (DIRTY: added)  '(...)' { 856 -- 870 }
				[4] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
					[5] Constant (DIRTY: removed)  '"2\n"' { 0 -- 0 }
		[2] PostfixExpression (DIRTY: added)  '(...)' { 795 -- 810 }
			[3] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
				[4] Constant (DIRTY: removed)  '"last"' { 0 -- 0 }
	[1] Function (DIRTY: modified)  (void DEFER_CONDITION_MULTIPLE (int someParam,  )) { 986 -- 1245 }
		[2] Defer (DIRTY: removed)  { 1044 -- 1060 }
			[3] PostfixExpression (DIRTY: removed)  '(...)' { 1044 -- 1059 }
				[4] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
					[5] Constant (DIRTY: removed)  '"last"' { 0 -- 0 }
		[2] If (DIRTY: modified)  { 1060 -- 1151 }
			[3] Group { 1060 -- 1085 }
				[4] BinaryOp '>' { 1068 -- 1085 }
					[5] Identifier 'someParam' { 0 -- 0 }
					[5] Constant '10' { 0 -- 0 }
			[3] Defer (DIRTY: removed)  { 1105 -- 1122 }
				[4] PostfixExpression (DIRTY: removed)  '(...)' { 1105 -- 1121 }
					[5] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
						[6] Constant (DIRTY: removed)  '"1.2\n"' { 0 -- 0 }
			[3] PostfixExpression '(...)' { 1122 -- 1145 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"1.1"' { 0 -- 0 }
			[3] PostfixExpression (DIRTY: added)  '(...)' { 1105 -- 1121 }
				[4] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
					[5] Constant (DIRTY: removed)  '"1.2\n"' { 0 -- 0 }
		[2] If (DIRTY: modified)  { 1151 -- 1243 }
			[3] Group { 1151 -- 1175 }
				[4] BinaryOp '<' { 1159 -- 1175 }
					[5] Identifier 'someParam' { 0 -- 0 }
					[5] Constant '5' { 0 -- 0 }
			[3] Defer (DIRTY: removed)  { 1195 -- 1212 }
				[4] PostfixExpression (DIRTY: removed)  '(...)' { 1195 -- 1211 }
					[5] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
						[6] Constant (DIRTY: removed)  '"2.2\n"' { 0 -- 0 }
			[3] PostfixExpression '(...)' { 1212 -- 1237 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"2.1\n"' { 0 -- 0 }
			[3] PostfixExpression (DIRTY: added)  '(...)' { 1195 -- 1211 }
				[4] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
					[5] Constant (DIRTY: removed)  '"2.2\n"' { 0 -- 0 }
		[2] PostfixExpression (DIRTY: added)  '(...)' { 1044 -- 1059 }
			[3] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
				[4] Constant (DIRTY: removed)  '"last"' { 0 -- 0 }
	[1] Function (void DEFER_LOOP ( )) { 1245 -- 1486 }
		[2] BinaryOp '=' { 1278 -- 1285 }
			[3] Declaration 'int i' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] Loop (DIRTY: modified)  for { 1285 -- 1377 }
			[3] Group { 1312 -- 1313 }
				[4] BinaryOp '=' { 1293 -- 1301 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '0' { 0 -- 0 }
				[4] BinaryOp '<' { 1301 -- 1308 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '5' { 0 -- 0 }
				[4] PostfixExpression '++' { 1308 -- 1312 }
					[5] Identifier 'i' { 0 -- 0 }
			[3] Defer (DIRTY: removed)  { 1333 -- 1348 }
				[4] PostfixExpression (DIRTY: removed)  '(...)' { 1333 -- 1347 }
					[5] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
						[6] Constant (DIRTY: removed)  '"2\n"' { 0 -- 0 }
			[3] PostfixExpression '(...)' { 1348 -- 1371 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"1\n"' { 0 -- 0 }
			[3] PostfixExpression (DIRTY: added)  '(...)' { 1333 -- 1347 }
				[4] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
					[5] Constant (DIRTY: removed)  '"2\n"' { 0 -- 0 }
		[2] BinaryOp '=' { 1377 -- 1389 }
			[3] Identifier 'i' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] Loop (DIRTY: modified)  while { 1389 -- 1484 }
			[3] Group { 0 -- 0 }
				[4] BinaryOp '<' { 1399 -- 1407 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '5' { 0 -- 0 }
			[3] Defer (DIRTY: removed)  { 1427 -- 1442 }
				[4] PostfixExpression (DIRTY: removed)  '(...)' { 1427 -- 1441 }
					[5] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
						[6] Constant (DIRTY: removed)  '"2\n"' { 0 -- 0 }
			[3] PostfixExpression '(...)' { 1442 -- 1465 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"1\n"' { 0 -- 0 }
			[3] PostfixExpression '++' { 1465 -- 1478 }
				[4] Identifier 'i' { 0 -- 0 }
			[3] PostfixExpression (DIRTY: added)  '(...)' { 1427 -- 1441 }
				[4] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
					[5] Constant (DIRTY: removed)  '"2\n"' { 0 -- 0 }
	[1] Function (void DEFER_LOOP_BREAK (int param,  )) { 1486 -- 1868 }
		[2] BinaryOp '=' { 1530 -- 1537 }
			[3] Declaration 'int i' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] Loop (DIRTY: modified)  for { 1537 -- 1694 }
			[3] Group { 1564 -- 1565 }
				[4] BinaryOp '=' { 1545 -- 1553 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '0' { 0 -- 0 }
				[4] BinaryOp '<' { 1553 -- 1560 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '5' { 0 -- 0 }
				[4] PostfixExpression '++' { 1560 -- 1564 }
					[5] Identifier 'i' { 0 -- 0 }
			[3] Defer (DIRTY: removed)  { 1585 -- 1600 }
				[4] PostfixExpression (DIRTY: removed)  '(...)' { 1585 -- 1599 }
					[5] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
						[6] Constant (DIRTY: removed)  '"2\n"' { 0 -- 0 }
			[3] If { 1600 -- 1664 }
				[4] Group { 1600 -- 1625 }
					[5] BinaryOp '==' { 1612 -- 1625 }
						[6] Identifier 'i' { 0 -- 0 }
						[6] Identifier 'param' { 0 -- 0 }
				[4] JumpStatement 'break' { 1653 -- 1654 }
			[3] PostfixExpression '(...)' { 1664 -- 1688 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"1\n"' { 0 -- 0 }
			[3] PostfixExpression (DIRTY: added)  '(...)' { 1585 -- 1599 }
				[4] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
					[5] Constant (DIRTY: removed)  '"2\n"' { 0 -- 0 }
		[2] BinaryOp '=' { 1694 -- 1706 }
			[3] Identifier 'i' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] Loop (DIRTY: modified)  while { 1706 -- 1866 }
			[3] Group { 0 -- 0 }
				[4] BinaryOp '<' { 1716 -- 1724 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '5' { 0 -- 0 }
			[3] Defer (DIRTY: removed)  { 1744 -- 1759 }
				[4] PostfixExpression (DIRTY: removed)  '(...)' { 1744 -- 1758 }
					[5] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
						[6] Constant (DIRTY: removed)  '"2\n"' { 0 -- 0 }
			[3] If { 1759 -- 1823 }
				[4] Group { 1759 -- 1784 }
					[5] BinaryOp '==' { 1771 -- 1784 }
						[6] Identifier 'i' { 0 -- 0 }
						[6] Identifier 'param' { 0 -- 0 }
				[4] JumpStatement 'break' { 1812 -- 1813 }
			[3] PostfixExpression '(...)' { 1823 -- 1847 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"1\n"' { 0 -- 0 }
			[3] PostfixExpression '++' { 1847 -- 1860 }
				[4] Identifier 'i' { 0 -- 0 }
			[3] PostfixExpression (DIRTY: added)  '(...)' { 1744 -- 1758 }
				[4] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
					[5] Constant (DIRTY: removed)  '"2\n"' { 0 -- 0 }
	[1] Function (void DEFER_LOOP_CONTINUE (int param,  )) { 1868 -- 2259 }
		[2] BinaryOp '=' { 1915 -- 1922 }
			[3] Declaration 'int i' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] Loop (DIRTY: modified)  for { 1922 -- 2082 }
			[3] Group { 1949 -- 1950 }
				[4] BinaryOp '=' { 1930 -- 1938 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '0' { 0 -- 0 }
				[4] BinaryOp '<' { 1938 -- 1945 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '5' { 0 -- 0 }
				[4] PostfixExpression '++' { 1945 -- 1949 }
					[5] Identifier 'i' { 0 -- 0 }
			[3] Defer (DIRTY: removed)  { 1970 -- 1985 }
				[4] PostfixExpression (DIRTY: removed)  '(...)' { 1970 -- 1984 }
					[5] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
						[6] Constant (DIRTY: removed)  '"2\n"' { 0 -- 0 }
			[3] If { 1985 -- 2052 }
				[4] Group { 1985 -- 2010 }
					[5] BinaryOp '==' { 1997 -- 2010 }
						[6] Identifier 'i' { 0 -- 0 }
						[6] Identifier 'param' { 0 -- 0 }
				[4] JumpStatement 'continue' { 2041 -- 2042 }
			[3] PostfixExpression '(...)' { 2052 -- 2076 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"1\n"' { 0 -- 0 }
			[3] PostfixExpression (DIRTY: added)  '(...)' { 1970 -- 1984 }
				[4] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
					[5] Constant (DIRTY: removed)  '"2\n"' { 0 -- 0 }
		[2] BinaryOp '=' { 2082 -- 2094 }
			[3] Identifier 'i' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] Loop (DIRTY: modified)  while { 2094 -- 2257 }
			[3] Group { 0 -- 0 }
				[4] BinaryOp '<' { 2104 -- 2112 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '5' { 0 -- 0 }
			[3] Defer (DIRTY: removed)  { 2132 -- 2147 }
				[4] PostfixExpression (DIRTY: removed)  '(...)' { 2132 -- 2146 }
					[5] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
						[6] Constant (DIRTY: removed)  '"2\n"' { 0 -- 0 }
			[3] If { 2147 -- 2214 }
				[4] Group { 2147 -- 2172 }
					[5] BinaryOp '==' { 2159 -- 2172 }
						[6] Identifier 'i' { 0 -- 0 }
						[6] Identifier 'param' { 0 -- 0 }
				[4] JumpStatement 'continue' { 2203 -- 2204 }
			[3] PostfixExpression '(...)' { 2214 -- 2238 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"1\n"' { 0 -- 0 }
			[3] PostfixExpression '++' { 2238 -- 2251 }
				[4] Identifier 'i' { 0 -- 0 }
			[3] PostfixExpression (DIRTY: added)  '(...)' { 2132 -- 2146 }
				[4] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
					[5] Constant (DIRTY: removed)  '"2\n"' { 0 -- 0 }
	[1] Function (DIRTY: modified)  (void DEFER_MULTIPLE ( )) { 2259 -- 2365 }
		[2] Defer (DIRTY: removed)  { 2298 -- 2313 }
			[3] PostfixExpression (DIRTY: removed)  '(...)' { 2298 -- 2312 }
				[4] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
					[5] Constant (DIRTY: removed)  '"3\n"' { 0 -- 0 }
		[2] Defer (DIRTY: removed)  { 2313 -- 2338 }
			[3] PostfixExpression (DIRTY: removed)  '(...)' { 2323 -- 2337 }
				[4] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
					[5] Constant (DIRTY: removed)  '"2\n"' { 0 -- 0 }
		[2] Defer (DIRTY: removed)  { 2338 -- 2363 }
			[3] PostfixExpression (DIRTY: removed)  '(...)' { 2348 -- 2362 }
				[4] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
					[5] Constant (DIRTY: removed)  '"1\n"' { 0 -- 0 }
		[2] PostfixExpression (DIRTY: added)  '(...)' { 2298 -- 2312 }
			[3] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
				[4] Constant (DIRTY: removed)  '"3\n"' { 0 -- 0 }
		[2] PostfixExpression (DIRTY: added)  '(...)' { 2323 -- 2337 }
			[3] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
				[4] Constant (DIRTY: removed)  '"2\n"' { 0 -- 0 }
		[2] PostfixExpression (DIRTY: added)  '(...)' { 2348 -- 2362 }
			[3] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
				[4] Constant (DIRTY: removed)  '"1\n"' { 0 -- 0 }
	[1] Function (DIRTY: modified)  (void DEFER_SWITCH_CASE (int param,  )) { 2365 -- 2659 }
		[2] Defer (DIRTY: removed)  { 2412 -- 2430 }
			[3] PostfixExpression (DIRTY: removed)  '(...)' { 2412 -- 2429 }
				[4] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
					[5] Constant (DIRTY: removed)  '"last\n"' { 0 -- 0 }
		[2] SwitchCase on 'Identifier' { 2430 -- 2657 }
			[3] Identifier 'param' { 0 -- 0 }
			[3] SwitchCaseLabel on 'Constant' { 2469 -- 2499 }
				[4] Constant '0' { 0 -- 0 }
				[4] PostfixExpression '(...)' { 2472 -- 2499 }
					[5] Identifier 'printf' { 0 -- 0 }
						[6] Constant '"0\n"' { 0 -- 0 }
			[3] JumpStatement 'break' { 2499 -- 2518 }
			[3] SwitchCaseLabel on 'Constant' { 2518 -- 2562 }
				[4] Constant '1' { 0 -- 0 }
				[4] PostfixExpression '(...)' { 2535 -- 2562 }
					[5] Identifier 'printf' { 0 -- 0 }
						[6] Constant '"0\n"' { 0 -- 0 }
			[3] JumpStatement 'break' { 2562 -- 2581 }
			[3] SwitchCaseLabel on 'default' { 2581 -- 2632 }
				[4] EmptyStatement
				[4] PostfixExpression '(...)' { 2599 -- 2632 }
					[5] Identifier 'printf' { 0 -- 0 }
						[6] Constant '"default\n"' { 0 -- 0 }
			[3] JumpStatement 'break' { 2632 -- 2651 }
		[2] PostfixExpression (DIRTY: added)  '(...)' { 2412 -- 2429 }
			[3] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
				[4] Constant (DIRTY: removed)  '"last\n"' { 0 -- 0 }
	[1] Function (DIRTY: modified)  (void DEFER_STRANGE ( )) { 2659 -- 2917 }
		[2] BinaryOp '=' { 2695 -- 2702 }
			[3] Declaration 'int i' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] Loop (DIRTY: modified)  for { 2702 -- 2797 }
			[3] Group { 2763 -- 2764 }
				[4] BinaryOp '=' { 2744 -- 2752 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '0' { 0 -- 0 }
				[4] BinaryOp '<' { 2752 -- 2759 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '5' { 0 -- 0 }
				[4] PostfixExpression '++' { 2759 -- 2763 }
					[5] Identifier 'i' { 0 -- 0 }
			[3] Defer (DIRTY: removed)  { 2764 -- 2797 }
				[4] PostfixExpression (DIRTY: removed)  '(...)' { 2778 -- 2796 }
					[5] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
						[6] Constant (DIRTY: removed)  '"%d\n"' { 0 -- 0 }
						[6] Identifier (DIRTY: removed)  'i' { 0 -- 0 }
			[3] PostfixExpression (DIRTY: added)  '(...)' { 2778 -- 2796 }
				[4] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
					[5] Constant (DIRTY: removed)  '"%d\n"' { 0 -- 0 }
					[5] Identifier (DIRTY: removed)  'i' { 0 -- 0 }
		[2] If (DIRTY: modified)  { 2797 -- 2864 }
			[3] Group { 2797 -- 2814 }
				[4] BinaryOp '==' { 2805 -- 2814 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '0' { 0 -- 0 }
			[3] Defer (DIRTY: removed)  { 2814 -- 2864 }
				[4] PostfixExpression (DIRTY: removed)  '(...)' { 2828 -- 2863 }
					[5] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
						[6] Constant (DIRTY: removed)  '"deferred print in cond\n"' { 0 -- 0 }
			[3] PostfixExpression (DIRTY: added)  '(...)' { 2828 -- 2863 }
				[4] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
					[5] Constant (DIRTY: removed)  '"deferred print in cond\n"' { 0 -- 0 }
		[2] Defer (DIRTY: removed)  { 2864 -- 2915 }
			[3] PostfixExpression (DIRTY: removed)  '(...)' { 2875 -- 2914 }
				[4] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
					[5] Constant (DIRTY: removed)  '"last statement in function\n"' { 0 -- 0 }
		[2] PostfixExpression (DIRTY: added)  '(...)' { 2875 -- 2914 }
			[3] Identifier (DIRTY: removed)  'printf' { 0 -- 0 }
				[4] Constant (DIRTY: removed)  '"last statement in function\n"' { 0 -- 0 }
	[1] Function (void DEFER_WITH_COMPL_STATEMENTS ( )) { 2917 -- 3300 }
		[2] BinaryOp '=' { 2967 -- 2980 }
			[3] Declaration 'int counter' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] BinaryOp '=' { 2980 -- 3007 }
			[3] Declaration 'int counterSecond' { 0 -- 0 }
			[3] Constant '5' { 0 -- 0 }
		[2] PostfixExpression '(...)' { 3007 -- 3035 }
			[3] Identifier 'printf' { 0 -- 0 }
				[4] Constant '"fun start\n"' { 0 -- 0 }
		[2] Scope (DIRTY: modified)  { 3035 -- 3118 }
			[3] Defer (DIRTY: removed)  { 3056 -- 3070 }
				[4] BinaryOp (DIRTY: removed)  '+=' { 3056 -- 3070 }
					[5] Identifier (DIRTY: removed)  'counter' { 0 -- 0 }
					[5] Constant (DIRTY: removed)  '1' { 0 -- 0 }
			[3] PostfixExpression '(...)' { 3070 -- 3112 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"counter: %d\n"' { 0 -- 0 }
					[5] Identifier 'counter' { 0 -- 0 }
			[3] BinaryOp (DIRTY: added)  '+=' { 3056 -- 3070 }
				[4] Identifier (DIRTY: removed)  'counter' { 0 -- 0 }
				[4] Constant (DIRTY: removed)  '1' { 0 -- 0 }
		[2] PostfixExpression '(...)' { 3118 -- 3156 }
			[3] Identifier 'printf' { 0 -- 0 }
				[4] Constant '"counter: %d\n"' { 0 -- 0 }
				[4] Identifier 'counter' { 0 -- 0 }
		[2] Scope (DIRTY: modified)  { 3156 -- 3260 }
			[3] Defer (DIRTY: removed)  { 3177 -- 3212 }
				[4] BinaryOp (DIRTY: removed)  '=' { 3177 -- 3212 }
					[5] Identifier (DIRTY: removed)  'counter' { 0 -- 0 }
					[5] BinaryOp (DIRTY: removed)  '+' { 0 -- 0 }
						[6] Identifier (DIRTY: removed)  'counterSecond' { 0 -- 0 }
						[6] Identifier (DIRTY: removed)  'counter' { 0 -- 0 }
			[3] PostfixExpression '(...)' { 3212 -- 3254 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"counter: %d\n"' { 0 -- 0 }
					[5] Identifier 'counter' { 0 -- 0 }
			[3] BinaryOp (DIRTY: added)  '=' { 3177 -- 3212 }
				[4] Identifier (DIRTY: removed)  'counter' { 0 -- 0 }
				[4] BinaryOp (DIRTY: removed)  '+' { 0 -- 0 }
					[5] Identifier (DIRTY: removed)  'counterSecond' { 0 -- 0 }
					[5] Identifier (DIRTY: removed)  'counter' { 0 -- 0 }
		[2] PostfixExpression '(...)' { 3260 -- 3298 }
			[3] Identifier 'printf' { 0 -- 0 }
				[4] Constant '"counter: %d\n"' { 0 -- 0 }
				[4] Identifier 'counter' { 0 -- 0 }
squashed range: (0 -- 64) Function
squashed range: (64 -- 87) PostfixExpression
squashed range: (127 -- 161) PostfixExpression
squashed range: (97 -- 126) PostfixExpression
squashed range: (161 -- 163) Function
squashed range: (163 -- 207) Function
squashed range: (207 -- 222) Scope
squashed range: (222 -- 236) PostfixExpression
squashed range: (271 -- 300) PostfixExpression
squashed range: (250 -- 270) PostfixExpression
squashed range: (300 -- 306) Scope
squashed range: (306 -- 308) Function
squashed range: (308 -- 352) Function
squashed range: (352 -- 379) PostfixExpression
squashed range: (379 -- 401) Scope
squashed range: (401 -- 415) PostfixExpression
squashed range: (450 -- 479) PostfixExpression
squashed range: (429 -- 449) PostfixExpression
squashed range: (479 -- 485) Scope
squashed range: (485 -- 522) PostfixExpression
squashed range: (522 -- 524) Function
squashed range: (524 -- 574) Function
squashed range: (574 -- 590) PostfixExpression
squashed range: (590 -- 590) If
squashed range: (590 -- 615) Group
squashed range: (598 -- 615) BinaryOp
squashed range: (636 -- 644) PostfixExpression
squashed range: (673 -- 696) PostfixExpression
squashed range: (658 -- 672) PostfixExpression
squashed range: (696 -- 702) If
squashed range: (702 -- 728) PostfixExpression
squashed range: (728 -- 730) Function
squashed range: (730 -- 811) Function
squashed range: (811 -- 811) If
squashed range: (811 -- 836) Group
squashed range: (819 -- 836) BinaryOp
squashed range: (871 -- 871) If
squashed range: (871 -- 898) Group
squashed range: (882 -- 898) BinaryOp
squashed range: (941 -- 968) PostfixExpression
squashed range: (926 -- 940) PostfixExpression
squashed range: (968 -- 978) If
squashed range: (856 -- 870) PostfixExpression
squashed range: (978 -- 984) If
squashed range: (795 -- 810) PostfixExpression
squashed range: (984 -- 986) Function
squashed range: (986 -- 1060) Function
squashed range: (1060 -- 1060) If
squashed range: (1060 -- 1085) Group
squashed range: (1068 -- 1085) BinaryOp
squashed range: (1122 -- 1145) PostfixExpression
squashed range: (1105 -- 1121) PostfixExpression
squashed range: (1145 -- 1151) If
squashed range: (1151 -- 1151) If
squashed range: (1151 -- 1175) Group
squashed range: (1159 -- 1175) BinaryOp
squashed range: (1212 -- 1237) PostfixExpression
squashed range: (1195 -- 1211) PostfixExpression
squashed range: (1237 -- 1243) If
squashed range: (1044 -- 1059) PostfixExpression
squashed range: (1243 -- 1245) Function
squashed range: (1245 -- 1278) Function
squashed range: (1278 -- 1285) BinaryOp
squashed range: (1285 -- 1312) Loop
squashed range: (1312 -- 1313) Group
squashed range: (1293 -- 1301) BinaryOp
squashed range: (1301 -- 1308) BinaryOp
squashed range: (1308 -- 1312) PostfixExpression
squashed range: (1348 -- 1371) PostfixExpression
squashed range: (1333 -- 1347) PostfixExpression
squashed range: (1371 -- 1377) Loop
squashed range: (1377 -- 1389) BinaryOp
squashed range: (1389 -- 1399) Loop
squashed range: (1399 -- 1407) BinaryOp
squashed range: (1442 -- 1465) PostfixExpression
squashed range: (1465 -- 1478) PostfixExpression
squashed range: (1427 -- 1441) PostfixExpression
squashed range: (1478 -- 1484) Loop
squashed range: (1484 -- 1486) Function
squashed range: (1486 -- 1530) Function
squashed range: (1530 -- 1537) BinaryOp
squashed range: (1537 -- 1564) Loop
squashed range: (1564 -- 1565) Group
squashed range: (1545 -- 1553) BinaryOp
squashed range: (1553 -- 1560) BinaryOp
squashed range: (1560 -- 1564) PostfixExpression
squashed range: (1600 -- 1600) If
squashed range: (1600 -- 1625) Group
squashed range: (1612 -- 1625) BinaryOp
squashed range: (1653 -- 1654) JumpStatement
squashed range: (1654 -- 1664) If
squashed range: (1664 -- 1688) PostfixExpression
squashed range: (1585 -- 1599) PostfixExpression
squashed range: (1688 -- 1694) Loop
squashed range: (1694 -- 1706) BinaryOp
squashed range: (1706 -- 1716) Loop
squashed range: (1716 -- 1724) BinaryOp
squashed range: (1759 -- 1759) If
squashed range: (1759 -- 1784) Group
squashed range: (1771 -- 1784) BinaryOp
squashed range: (1812 -- 1813) JumpStatement
squashed range: (1813 -- 1823) If
squashed range: (1823 -- 1847) PostfixExpression
squashed range: (1847 -- 1860) PostfixExpression
squashed range: (1744 -- 1758) PostfixExpression
squashed range: (1860 -- 1866) Loop
squashed range: (1866 -- 1868) Function
squashed range: (1868 -- 1915) Function
squashed range: (1915 -- 1922) BinaryOp
squashed range: (1922 -- 1949) Loop
squashed range: (1949 -- 1950) Group
squashed range: (1930 -- 1938) BinaryOp
squashed range: (1938 -- 1945) BinaryOp
squashed range: (1945 -- 1949) PostfixExpression
squashed range: (1985 -- 1985) If
squashed range: (1985 -- 2010) Group
squashed range: (1997 -- 2010) BinaryOp
squashed range: (2041 -- 2042) JumpStatement
squashed range: (2042 -- 2052) If
squashed range: (2052 -- 2076) PostfixExpression
squashed range: (1970 -- 1984) PostfixExpression
squashed range: (2076 -- 2082) Loop
squashed range: (2082 -- 2094) BinaryOp
squashed range: (2094 -- 2104) Loop
squashed range: (2104 -- 2112) BinaryOp
squashed range: (2147 -- 2147) If
squashed range: (2147 -- 2172) Group
squashed range: (2159 -- 2172) BinaryOp
squashed range: (2203 -- 2204) JumpStatement
squashed range: (2204 -- 2214) If
squashed range: (2214 -- 2238) PostfixExpression
squashed range: (2238 -- 2251) PostfixExpression
squashed range: (2132 -- 2146) PostfixExpression
squashed range: (2251 -- 2257) Loop
squashed range: (2257 -- 2259) Function
squashed range: (2259 -- 2298) Function
squashed range: (2298 -- 2312) PostfixExpression
squashed range: (2323 -- 2337) PostfixExpression
squashed range: (2348 -- 2362) PostfixExpression
squashed range: (2362 -- 2365) Function
squashed range: (2365 -- 2430) Function
squashed range: (2430 -- 2469) SwitchCase
squashed range: (2469 -- 2499) SwitchCaseLabel
squashed range: (2472 -- 2499) PostfixExpression
squashed range: (2499 -- 2518) JumpStatement
squashed range: (2518 -- 2562) SwitchCaseLabel
squashed range: (2535 -- 2562) PostfixExpression
squashed range: (2562 -- 2581) JumpStatement
squashed range: (2581 -- 2632) SwitchCaseLabel
squashed range: (2599 -- 2632) PostfixExpression
squashed range: (2632 -- 2651) JumpStatement
squashed range: (2651 -- 2657) SwitchCase
squashed range: (2412 -- 2429) PostfixExpression
squashed range: (2657 -- 2659) Function
squashed range: (2659 -- 2695) Function
squashed range: (2695 -- 2702) BinaryOp
squashed range: (2702 -- 2763) Loop
squashed range: (2763 -- 2764) Group
squashed range: (2744 -- 2752) BinaryOp
squashed range: (2752 -- 2759) BinaryOp
squashed range: (2759 -- 2763) PostfixExpression
squashed range: (2778 -- 2796) PostfixExpression
squashed range: (2796 -- 2797) Loop
squashed range: (2797 -- 2797) If
squashed range: (2797 -- 2814) Group
squashed range: (2805 -- 2814) BinaryOp
squashed range: (2828 -- 2863) PostfixExpression
squashed range: (2863 -- 2864) If
squashed range: (2875 -- 2914) PostfixExpression
squashed range: (2914 -- 2917) Function
squashed range: (2917 -- 2967) Function
squashed range: (2967 -- 2980) BinaryOp
squashed range: (2980 -- 3007) BinaryOp
squashed range: (3007 -- 3035) PostfixExpression
squashed range: (3035 -- 3070) Scope
squashed range: (3070 -- 3112) PostfixExpression
squashed range: (3056 -- 3070) BinaryOp
squashed range: (3112 -- 3118) Scope
squashed range: (3118 -- 3156) PostfixExpression
squashed range: (3156 -- 3212) Scope
squashed range: (3212 -- 3254) PostfixExpression
squashed range: (3177 -- 3212) BinaryOp
squashed range: (3254 -- 3260) Scope
squashed range: (3260 -- 3298) PostfixExpression
squashed range: (3298 -- 3300) Function
Generated file /tmp/AST_defer.c
