Parsing file: 'AST_looping.sc'...
Parsing done, characters count 1463

AST:
[0] TranslationUnit
	[1] Function (void TEST_LOOP_FOR ( )) { 0 -- 135 }
		[2] BinaryOp '=' { 54 -- 61 }
			[3] Declaration 'int i' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] Loop for { 61 -- 133 }
			[3] Group
				[4] BinaryOp '=' { 69 -- 77 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '0' { 0 -- 0 }
				[4] BinaryOp '<' { 77 -- 85 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '10' { 0 -- 0 }
				[4] PostfixExpression '++' { 85 -- 89 }
					[5] Identifier 'i' { 0 -- 0 }
			[3] PostfixExpression '(...)' { 111 -- 127 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"i = %d\n"' { 0 -- 0 }
					[5] Identifier 'i' { 0 -- 0 }
	[1] Function (void TEST_LOOP_FOR_BREAK ( )) { 135 -- 317 }
		[2] BinaryOp '=' { 177 -- 184 }
			[3] Declaration 'int i' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] Loop for { 184 -- 315 }
			[3] Group
				[4] BinaryOp '=' { 192 -- 200 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '0' { 0 -- 0 }
				[4] BinaryOp '<' { 200 -- 208 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '10' { 0 -- 0 }
				[4] PostfixExpression '++' { 208 -- 212 }
					[5] Identifier 'i' { 0 -- 0 }
			[3] PostfixExpression '(...)' { 234 -- 250 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"i = %d\n"' { 0 -- 0 }
					[5] Identifier 'i' { 0 -- 0 }
			[3] If { 250 -- 309 }
				[4] Group
					[5] BinaryOp '==' { 261 -- 270 }
						[6] Identifier 'i' { 0 -- 0 }
						[6] Constant '5' { 0 -- 0 }
				[4] JumpStatement 'break' { 298 -- 299 }
	[1] Function (void TEST_LOOP_FOR_RETURN ( )) { 317 -- 501 }
		[2] BinaryOp '=' { 360 -- 367 }
			[3] Declaration 'int i' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] Loop for { 367 -- 499 }
			[3] Group
				[4] BinaryOp '=' { 375 -- 383 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '0' { 0 -- 0 }
				[4] BinaryOp '<' { 383 -- 391 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '10' { 0 -- 0 }
				[4] PostfixExpression '++' { 391 -- 395 }
					[5] Identifier 'i' { 0 -- 0 }
			[3] PostfixExpression '(...)' { 417 -- 433 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"i = %d\n"' { 0 -- 0 }
					[5] Identifier 'i' { 0 -- 0 }
			[3] If { 433 -- 493 }
				[4] Group
					[5] BinaryOp '==' { 444 -- 453 }
						[6] Identifier 'i' { 0 -- 0 }
						[6] Constant '5' { 0 -- 0 }
				[4] Return 'empty' { 482 -- 483 }
	[1] Function (void TEST_LOOP_FOR_CONTINUE ( )) { 501 -- 690 }
		[2] BinaryOp '=' { 546 -- 553 }
			[3] Declaration 'int i' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] Loop for { 553 -- 688 }
			[3] Group
				[4] BinaryOp '=' { 561 -- 569 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '0' { 0 -- 0 }
				[4] BinaryOp '<' { 569 -- 577 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '10' { 0 -- 0 }
				[4] PostfixExpression '++' { 577 -- 581 }
					[5] Identifier 'i' { 0 -- 0 }
			[3] If { 599 -- 650 }
				[4] Group
					[5] BinaryOp '==' { 599 -- 608 }
						[6] Identifier 'i' { 0 -- 0 }
						[6] Constant '5' { 0 -- 0 }
				[4] JumpStatement 'continue' { 639 -- 640 }
			[3] PostfixExpression '(...)' { 650 -- 682 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"i = %d\n"' { 0 -- 0 }
					[5] Identifier 'i' { 0 -- 0 }
	[1] Function (void TEST_LOOP_WHILE ( )) { 690 -- 783 }
		[2] BinaryOp '=' { 728 -- 735 }
			[3] Declaration 'int i' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] Loop while { 735 -- 781 }
			[3] Group
				[4] BinaryOp '<' { 745 -- 753 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '5' { 0 -- 0 }
			[3] BinaryOp '+=' { 769 -- 775 }
				[4] Identifier 'i' { 0 -- 0 }
				[4] Constant '1' { 0 -- 0 }
	[1] Function (void TEST_LOOP_WHILE_BREAK ( )) { 783 -- 941 }
		[2] BinaryOp '=' { 827 -- 834 }
			[3] Declaration 'int i' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] Loop while { 834 -- 939 }
			[3] Group
				[4] BinaryOp '<' { 844 -- 852 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '5' { 0 -- 0 }
			[3] BinaryOp '+=' { 868 -- 874 }
				[4] Identifier 'i' { 0 -- 0 }
				[4] Constant '1' { 0 -- 0 }
			[3] If { 874 -- 933 }
				[4] Group
					[5] BinaryOp '==' { 885 -- 894 }
						[6] Identifier 'i' { 0 -- 0 }
						[6] Constant '2' { 0 -- 0 }
				[4] JumpStatement 'break' { 922 -- 923 }
	[1] Function (void TEST_LOOP_WHILE_RETURN ( )) { 941 -- 1101 }
		[2] BinaryOp '=' { 986 -- 993 }
			[3] Declaration 'int i' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] Loop while { 993 -- 1099 }
			[3] Group
				[4] BinaryOp '<' { 1003 -- 1011 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '5' { 0 -- 0 }
			[3] BinaryOp '+=' { 1027 -- 1033 }
				[4] Identifier 'i' { 0 -- 0 }
				[4] Constant '1' { 0 -- 0 }
			[3] If { 1033 -- 1093 }
				[4] Group
					[5] BinaryOp '==' { 1044 -- 1053 }
						[6] Identifier 'i' { 0 -- 0 }
						[6] Constant '3' { 0 -- 0 }
				[4] Return 'empty' { 1082 -- 1083 }
	[1] Function (void TEST_LOOP_WHILE_CONTINUE ( )) { 1101 -- 1296 }
		[2] BinaryOp '=' { 1148 -- 1155 }
			[3] Declaration 'int i' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] Loop while { 1155 -- 1294 }
			[3] Group
				[4] BinaryOp '<' { 1165 -- 1173 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '5' { 0 -- 0 }
			[3] BinaryOp '+=' { 1189 -- 1195 }
				[4] Identifier 'i' { 0 -- 0 }
				[4] Constant '1' { 0 -- 0 }
			[3] If { 1195 -- 1257 }
				[4] Group
					[5] BinaryOp '==' { 1206 -- 1215 }
						[6] Identifier 'i' { 0 -- 0 }
						[6] Constant '4' { 0 -- 0 }
				[4] JumpStatement 'continue' { 1246 -- 1247 }
			[3] PostfixExpression '(...)' { 1257 -- 1288 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"i = %d\n"' { 0 -- 0 }
					[5] Identifier 'i' { 0 -- 0 }
	[1] Function (void TEST_LOOP_NO_SCOPE ( )) { 1296 -- 1462 }
		[2] BinaryOp '=' { 1337 -- 1346 }
			[3] Declaration 'int i' { 0 -- 0 }
			[3] Constant '666' { 0 -- 0 }
		[2] Loop for { 1346 -- 1401 }
			[3] Group
				[4] BinaryOp '=' { 1354 -- 1362 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '0' { 0 -- 0 }
				[4] BinaryOp '<' { 1362 -- 1369 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '5' { 0 -- 0 }
				[4] UnaryOp '++' { 1369 -- 1374 }
					[5] Identifier 'i' { 0 -- 0 }
			[3] PostfixExpression '(...)' { 1374 -- 1401 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"%d\n"' { 0 -- 0 }
					[5] Identifier 'i' { 0 -- 0 }
		[2] BinaryOp '=' { 1401 -- 1413 }
			[3] Identifier 'i' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] Loop while { 1413 -- 1460 }
			[3] Group
				[4] BinaryOp '<' { 1423 -- 1431 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '5' { 0 -- 0 }
			[3] PostfixExpression '(...)' { 1458 -- 1460 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"%d\n"' { 0 -- 0 }
					[5] PostfixExpression '++' { 1431 -- 1458 }
						[6] Identifier 'i' { 0 -- 0 }


