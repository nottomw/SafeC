Parsing file: 'AST_defer.sc'...
Parsing done, characters count 3460

AST:
[0] TranslationUnit
	[1] Function (void DEFER_FUNCTION_SCOPE ( )) { 0 -- 163 }
		[2] PostfixExpression '(...)' { 64 -- 87 }
			[3] Identifier 'printf' { 0 -- 0 }
				[4] Constant '"function scope 1\n"' { 0 -- 0 }
		[2] Defer { 87 -- 127 }
			[3] PostfixExpression '(...)' { 87 -- 126 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"function scope 3\n"' { 0 -- 0 }
		[2] PostfixExpression '(...)' { 127 -- 161 }
			[3] Identifier 'printf' { 0 -- 0 }
				[4] Constant '"function scope 2\n"' { 0 -- 0 }
	[1] Function (void DEFER_SIMPLE_SCOPE_ONLY ( )) { 163 -- 308 }
		[2] Scope { 207 -- 306 }
			[3] PostfixExpression '(...)' { 222 -- 236 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"scope 1\n"' { 0 -- 0 }
			[3] Defer { 236 -- 271 }
				[4] PostfixExpression '(...)' { 236 -- 270 }
					[5] Identifier 'printf' { 0 -- 0 }
						[6] Constant '"scope 3\n"' { 0 -- 0 }
			[3] PostfixExpression '(...)' { 271 -- 300 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"scope 2\n"' { 0 -- 0 }
	[1] Function (void DEFER_SIMPLE_SCOPE ( )) { 308 -- 524 }
		[2] PostfixExpression '(...)' { 352 -- 379 }
			[3] Identifier 'printf' { 0 -- 0 }
				[4] Constant '"function scope start\n"' { 0 -- 0 }
		[2] Scope { 379 -- 485 }
			[3] PostfixExpression '(...)' { 401 -- 415 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"scope 1\n"' { 0 -- 0 }
			[3] Defer { 415 -- 450 }
				[4] PostfixExpression '(...)' { 415 -- 449 }
					[5] Identifier 'printf' { 0 -- 0 }
						[6] Constant '"scope 3\n"' { 0 -- 0 }
			[3] PostfixExpression '(...)' { 450 -- 479 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"scope 2\n"' { 0 -- 0 }
		[2] PostfixExpression '(...)' { 485 -- 522 }
			[3] Identifier 'printf' { 0 -- 0 }
				[4] Constant '"function scope end\n"' { 0 -- 0 }
	[1] Function (void DEFER_CONDITION (int someParam,  )) { 524 -- 730 }
		[2] PostfixExpression '(...)' { 574 -- 590 }
			[3] Identifier 'printf' { 0 -- 0 }
				[4] Constant '"fun start\n"' { 0 -- 0 }
		[2] If { 590 -- 702 }
			[3] Group
				[4] BinaryOp '==' { 598 -- 615 }
					[5] Identifier 'someParam' { 0 -- 0 }
					[5] Constant '5' { 0 -- 0 }
			[3] PostfixExpression '(...)' { 636 -- 644 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"1\n"' { 0 -- 0 }
			[3] Defer { 644 -- 673 }
				[4] PostfixExpression '(...)' { 644 -- 672 }
					[5] Identifier 'printf' { 0 -- 0 }
						[6] Constant '"3\n"' { 0 -- 0 }
			[3] PostfixExpression '(...)' { 673 -- 696 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"2\n"' { 0 -- 0 }
		[2] PostfixExpression '(...)' { 702 -- 728 }
			[3] Identifier 'printf' { 0 -- 0 }
				[4] Constant '"fun end\n"' { 0 -- 0 }
	[1] Function (void DEFER_CONDITION_MULTIPLE (int someParam,  )) { 730 -- 979 }
		[2] Defer { 788 -- 804 }
			[3] PostfixExpression '(...)' { 788 -- 803 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"last"' { 0 -- 0 }
		[2] If { 804 -- 977 }
			[3] Group
				[4] BinaryOp '>' { 812 -- 829 }
					[5] Identifier 'someParam' { 0 -- 0 }
					[5] Constant '10' { 0 -- 0 }
			[3] Defer { 849 -- 864 }
				[4] PostfixExpression '(...)' { 849 -- 863 }
					[5] Identifier 'printf' { 0 -- 0 }
						[6] Constant '"2\n"' { 0 -- 0 }
			[3] If { 864 -- 971 }
				[4] Group
					[5] BinaryOp '<' { 875 -- 891 }
						[6] Identifier 'someParam' { 0 -- 0 }
						[6] Constant '5' { 0 -- 0 }
				[4] Defer { 919 -- 934 }
					[5] PostfixExpression '(...)' { 919 -- 933 }
						[6] Identifier 'printf' { 0 -- 0 }
							[7] Constant '"2\n"' { 0 -- 0 }
				[4] PostfixExpression '(...)' { 934 -- 961 }
					[5] Identifier 'printf' { 0 -- 0 }
						[6] Constant '"1\n"' { 0 -- 0 }
	[1] Function (void DEFER_LOOP ( )) { 979 -- 1220 }
		[2] BinaryOp '=' { 1012 -- 1019 }
			[3] Declaration 'int i' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] Loop for { 1019 -- 1111 }
			[3] Group
				[4] BinaryOp '=' { 1027 -- 1035 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '0' { 0 -- 0 }
				[4] BinaryOp '<' { 1035 -- 1042 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '5' { 0 -- 0 }
				[4] PostfixExpression '++' { 1042 -- 1046 }
					[5] Identifier 'i' { 0 -- 0 }
			[3] Defer { 1067 -- 1082 }
				[4] PostfixExpression '(...)' { 1067 -- 1081 }
					[5] Identifier 'printf' { 0 -- 0 }
						[6] Constant '"2\n"' { 0 -- 0 }
			[3] PostfixExpression '(...)' { 1082 -- 1105 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"1\n"' { 0 -- 0 }
		[2] BinaryOp '=' { 1111 -- 1123 }
			[3] Identifier 'i' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] Loop while { 1123 -- 1218 }
			[3] Group
				[4] BinaryOp '<' { 1133 -- 1141 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '5' { 0 -- 0 }
			[3] Defer { 1161 -- 1176 }
				[4] PostfixExpression '(...)' { 1161 -- 1175 }
					[5] Identifier 'printf' { 0 -- 0 }
						[6] Constant '"2\n"' { 0 -- 0 }
			[3] PostfixExpression '(...)' { 1176 -- 1199 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"1\n"' { 0 -- 0 }
			[3] PostfixExpression '++' { 1199 -- 1212 }
				[4] Identifier 'i' { 0 -- 0 }
	[1] Function (void DEFER_LOOP_BREAK (int param,  )) { 1220 -- 1602 }
		[2] BinaryOp '=' { 1264 -- 1271 }
			[3] Declaration 'int i' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] Loop for { 1271 -- 1428 }
			[3] Group
				[4] BinaryOp '=' { 1279 -- 1287 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '0' { 0 -- 0 }
				[4] BinaryOp '<' { 1287 -- 1294 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '5' { 0 -- 0 }
				[4] PostfixExpression '++' { 1294 -- 1298 }
					[5] Identifier 'i' { 0 -- 0 }
			[3] Defer { 1319 -- 1334 }
				[4] PostfixExpression '(...)' { 1319 -- 1333 }
					[5] Identifier 'printf' { 0 -- 0 }
						[6] Constant '"2\n"' { 0 -- 0 }
			[3] If { 1334 -- 1398 }
				[4] Group
					[5] BinaryOp '==' { 1346 -- 1359 }
						[6] Identifier 'i' { 0 -- 0 }
						[6] Identifier 'param' { 0 -- 0 }
				[4] JumpStatement 'break' { 1387 -- 1388 }
			[3] PostfixExpression '(...)' { 1398 -- 1422 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"1\n"' { 0 -- 0 }
		[2] BinaryOp '=' { 1428 -- 1440 }
			[3] Identifier 'i' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] Loop while { 1440 -- 1600 }
			[3] Group
				[4] BinaryOp '<' { 1450 -- 1458 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '5' { 0 -- 0 }
			[3] Defer { 1478 -- 1493 }
				[4] PostfixExpression '(...)' { 1478 -- 1492 }
					[5] Identifier 'printf' { 0 -- 0 }
						[6] Constant '"2\n"' { 0 -- 0 }
			[3] If { 1493 -- 1557 }
				[4] Group
					[5] BinaryOp '==' { 1505 -- 1518 }
						[6] Identifier 'i' { 0 -- 0 }
						[6] Identifier 'param' { 0 -- 0 }
				[4] JumpStatement 'break' { 1546 -- 1547 }
			[3] PostfixExpression '(...)' { 1557 -- 1581 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"1\n"' { 0 -- 0 }
			[3] PostfixExpression '++' { 1581 -- 1594 }
				[4] Identifier 'i' { 0 -- 0 }
	[1] Function (void DEFER_LOOP_CONTINUE (int param,  )) { 1602 -- 1993 }
		[2] BinaryOp '=' { 1649 -- 1656 }
			[3] Declaration 'int i' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] Loop for { 1656 -- 1816 }
			[3] Group
				[4] BinaryOp '=' { 1664 -- 1672 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '0' { 0 -- 0 }
				[4] BinaryOp '<' { 1672 -- 1679 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '5' { 0 -- 0 }
				[4] PostfixExpression '++' { 1679 -- 1683 }
					[5] Identifier 'i' { 0 -- 0 }
			[3] Defer { 1704 -- 1719 }
				[4] PostfixExpression '(...)' { 1704 -- 1718 }
					[5] Identifier 'printf' { 0 -- 0 }
						[6] Constant '"2\n"' { 0 -- 0 }
			[3] If { 1719 -- 1786 }
				[4] Group
					[5] BinaryOp '==' { 1731 -- 1744 }
						[6] Identifier 'i' { 0 -- 0 }
						[6] Identifier 'param' { 0 -- 0 }
				[4] JumpStatement 'continue' { 1775 -- 1776 }
			[3] PostfixExpression '(...)' { 1786 -- 1810 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"1\n"' { 0 -- 0 }
		[2] BinaryOp '=' { 1816 -- 1828 }
			[3] Identifier 'i' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] Loop while { 1828 -- 1991 }
			[3] Group
				[4] BinaryOp '<' { 1838 -- 1846 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '5' { 0 -- 0 }
			[3] Defer { 1866 -- 1881 }
				[4] PostfixExpression '(...)' { 1866 -- 1880 }
					[5] Identifier 'printf' { 0 -- 0 }
						[6] Constant '"2\n"' { 0 -- 0 }
			[3] If { 1881 -- 1948 }
				[4] Group
					[5] BinaryOp '==' { 1893 -- 1906 }
						[6] Identifier 'i' { 0 -- 0 }
						[6] Identifier 'param' { 0 -- 0 }
				[4] JumpStatement 'continue' { 1937 -- 1938 }
			[3] PostfixExpression '(...)' { 1948 -- 1972 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"1\n"' { 0 -- 0 }
			[3] PostfixExpression '++' { 1972 -- 1985 }
				[4] Identifier 'i' { 0 -- 0 }
	[1] Function (void DEFER_MULTIPLE ( )) { 1993 -- 2099 }
		[2] Defer { 2032 -- 2047 }
			[3] PostfixExpression '(...)' { 2032 -- 2046 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"3\n"' { 0 -- 0 }
		[2] Defer { 2047 -- 2072 }
			[3] PostfixExpression '(...)' { 2047 -- 2071 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"2\n"' { 0 -- 0 }
		[2] Defer { 2072 -- 2097 }
			[3] PostfixExpression '(...)' { 2072 -- 2096 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"1\n"' { 0 -- 0 }
	[1] Function (void DEFER_SWITCH_CASE (int param,  )) { 2099 -- 2393 }
		[2] Defer { 2146 -- 2164 }
			[3] PostfixExpression '(...)' { 2146 -- 2163 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"last\n"' { 0 -- 0 }
		[2] SwitchCase on 'Identifier' { 2164 -- 2391 }
			[3] Identifier 'param' { 0 -- 0 }
			[3] SwitchCaseLabel on 'Constant' { 2203 -- 2233 }
				[4] Constant '0' { 0 -- 0 }
				[4] PostfixExpression '(...)' { 2206 -- 2233 }
					[5] Identifier 'printf' { 0 -- 0 }
						[6] Constant '"0\n"' { 0 -- 0 }
			[3] JumpStatement 'break' { 2233 -- 2252 }
			[3] SwitchCaseLabel on 'Constant' { 2252 -- 2296 }
				[4] Constant '1' { 0 -- 0 }
				[4] PostfixExpression '(...)' { 2269 -- 2296 }
					[5] Identifier 'printf' { 0 -- 0 }
						[6] Constant '"0\n"' { 0 -- 0 }
			[3] JumpStatement 'break' { 2296 -- 2315 }
			[3] SwitchCaseLabel on 'default' { 2315 -- 2366 }
				[4] EmptyStatement
				[4] PostfixExpression '(...)' { 2333 -- 2366 }
					[5] Identifier 'printf' { 0 -- 0 }
						[6] Constant '"default\n"' { 0 -- 0 }
			[3] JumpStatement 'break' { 2366 -- 2385 }
	[1] Function (void DEFER_STRANGE ( )) { 2393 -- 2651 }
		[2] BinaryOp '=' { 2429 -- 2436 }
			[3] Declaration 'int i' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] Loop for { 2436 -- 2531 }
			[3] Group
				[4] BinaryOp '=' { 2478 -- 2486 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '0' { 0 -- 0 }
				[4] BinaryOp '<' { 2486 -- 2493 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '5' { 0 -- 0 }
				[4] PostfixExpression '++' { 2493 -- 2497 }
					[5] Identifier 'i' { 0 -- 0 }
			[3] Defer { 2498 -- 2531 }
				[4] PostfixExpression '(...)' { 2498 -- 2530 }
					[5] Identifier 'printf' { 0 -- 0 }
						[6] Constant '"%d\n"' { 0 -- 0 }
						[6] Identifier 'i' { 0 -- 0 }
		[2] If { 2531 -- 2598 }
			[3] Group
				[4] BinaryOp '==' { 2539 -- 2548 }
					[5] Identifier 'i' { 0 -- 0 }
					[5] Constant '0' { 0 -- 0 }
			[3] Defer { 2548 -- 2598 }
				[4] PostfixExpression '(...)' { 2548 -- 2597 }
					[5] Identifier 'printf' { 0 -- 0 }
						[6] Constant '"deferred print in cond\n"' { 0 -- 0 }
		[2] Defer { 2598 -- 2649 }
			[3] PostfixExpression '(...)' { 2598 -- 2648 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"last statement in function\n"' { 0 -- 0 }
	[1] Function (void DEFER_WITH_COMPL_STATEMENTS ( )) { 2651 -- 3034 }
		[2] BinaryOp '=' { 2701 -- 2714 }
			[3] Declaration 'int counter' { 0 -- 0 }
			[3] Constant '0' { 0 -- 0 }
		[2] BinaryOp '=' { 2714 -- 2741 }
			[3] Declaration 'int counterSecond' { 0 -- 0 }
			[3] Constant '5' { 0 -- 0 }
		[2] PostfixExpression '(...)' { 2741 -- 2769 }
			[3] Identifier 'printf' { 0 -- 0 }
				[4] Constant '"fun start\n"' { 0 -- 0 }
		[2] Scope { 2769 -- 2852 }
			[3] Defer { 2790 -- 2804 }
				[4] BinaryOp '+=' { 2790 -- 2804 }
					[5] Identifier 'counter' { 0 -- 0 }
					[5] Constant '1' { 0 -- 0 }
			[3] PostfixExpression '(...)' { 2804 -- 2846 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"counter: %d\n"' { 0 -- 0 }
					[5] Identifier 'counter' { 0 -- 0 }
		[2] PostfixExpression '(...)' { 2852 -- 2890 }
			[3] Identifier 'printf' { 0 -- 0 }
				[4] Constant '"counter: %d\n"' { 0 -- 0 }
				[4] Identifier 'counter' { 0 -- 0 }
		[2] Scope { 2890 -- 2994 }
			[3] Defer { 2911 -- 2946 }
				[4] BinaryOp '=' { 2911 -- 2946 }
					[5] Identifier 'counter' { 0 -- 0 }
					[5] BinaryOp '+' { 0 -- 0 }
						[6] Identifier 'counterSecond' { 0 -- 0 }
						[6] Identifier 'counter' { 0 -- 0 }
			[3] PostfixExpression '(...)' { 2946 -- 2988 }
				[4] Identifier 'printf' { 0 -- 0 }
					[5] Constant '"counter: %d\n"' { 0 -- 0 }
					[5] Identifier 'counter' { 0 -- 0 }
		[2] PostfixExpression '(...)' { 2994 -- 3032 }
			[3] Identifier 'printf' { 0 -- 0 }
				[4] Constant '"counter: %d\n"' { 0 -- 0 }
				[4] Identifier 'counter' { 0 -- 0 }


